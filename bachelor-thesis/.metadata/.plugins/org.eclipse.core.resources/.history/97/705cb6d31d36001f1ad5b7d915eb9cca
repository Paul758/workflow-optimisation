package workflow.fitness;

import java.util.List;

import uk.ac.kcl.inf.mdeoptimiser.libraries.core.optimisation.IGuidanceFunction;
import uk.ac.kcl.inf.mdeoptimiser.libraries.core.optimisation.interpreter.guidance.Solution;
import workflow.Activity;
import workflow.InformationObject;
import workflow.Task;
import workflow.Workflow;

public class MaximiseTasksInActivity implements IGuidanceFunction {

	@Override
	public double computeFitness(Solution solution) {
		Workflow workflowModel = (Workflow) solution.getModel();
		List<Activity> activities = workflowModel.getActivities();
		int totalTasks = 0;
		
		for (Activity activity : activities) {
			List<InformationObject> informationObjects = activity.getEncapsulates();
			
			for (InformationObject informationObject : informationObjects) {
				if(informationObject instanceof Task) {
					totalTasks++;
				}
			}
		}
		
		double activityWeight = 1.0d;
		double taskWeight = 0.1d;
		
		double fitness = (totalTasks * taskWeight) - (totalActivities * activityWeight);
		
		return 0;
	}

	@Override
	public String getName() {
		// TODO Auto-generated method stub
		return "Maximise amount of tasks in an activity";
	}

}
